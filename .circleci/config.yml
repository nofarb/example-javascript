version: 2.1
orbs:
  codecov: codecov/codecov@3

jobs:
  build:
    docker:
      - image: cimg/node:current
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            npm install --save-dev @babel/preset-env @babel/register
            npm install

      - run:
          name: Run tests and collect coverage
          command: |
            npx jest --coverage
            sleep 5
            echo "Listing all files in the coverage directory:"
            ls -R $CIRCLE_WORKING_DIRECTORY/coverage
            find $CIRCLE_WORKING_DIRECTORY/coverage -type f

      - store_artifacts:
          path: coverage/coverage-final.json
          destination: coverage-report-json

      - store_artifacts:
          path: coverage/lcov-report
          destination: coverage-report-html

      - run:
          name: Create large dummy zip file (2MB)
          command: |
            mkdir -p dummy-data
            dd if=/dev/urandom of=dummy-data/random.bin bs=1M count=2
            zip -r dummy-artifact.zip dummy-data

      - store_artifacts:
          path: dummy-artifact.zip
          destination: dummy-large-file

      - run:
          name: Create nested artifact structure with files at each level
          command: |
            base_path="/tmp/artifacts"
            level1="$base_path/level1"
            level2="$level1/level2"
            level3="$level2/level3"

            mkdir -p "$level3"

            # Base64-encoded small valid PDF
            pdf_base64="JVBERi0xLjQKJeLjz9MKMSAwIG9iago8PC9UeXBlIC9DYXRhbG9nL1BhZ2VzIDIgMCBSCj4+CmVuZG9iagogMiAwIG9iago8PC9UeXBlIC9QYWdlcy9Db3VudCAxL0tpZHMgWzMgMCBSXQo+PgplbmRvYmoKMyAwIG9iago8PC9UeXBlIC9QYWdlL1BhcmVudCAyIDAgUi9NZWRpYUJveCBbMCAwIDMwMCAxNDRdL0NvbnRlbnRzIDQgMCBSCj4+CmVuZG9iago0IDAgb2JqCjw8L0xlbmd0aCA0NAo+PnN0cmVhbQpCVC9GMTggVGYgMTAgMTAwIFRkIChIZWxsbyBmcm9tIHNhZmUgYmFzZTY0KSBUaiBFVAplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCA1CjAwMDAwMDAwMDAgNjU1MzUgZgowMDAwMDAwMDEwIDAwMDAwIG4KMDAwMDAwMDA2MCAwMDAwMCBuCjAwMDAwMDAxMTcgMDAwMDAgbgowMDAwMDAwMjIwIDAwMDAwIG4KdHJhaWxlcgo8PC9Sb290IDEgMCBSL1NpemUgNQo+PgpzdGFydHhyZWYKMzE1CiUlRU9GCg=="

            for dir in "$level1" "$level2" "$level3"; do
              mkdir -p "$dir"
              echo "This is a text file in $dir" > "$dir/sample.txt"
              zip -j "$dir/sample.zip" "$dir/sample.txt"
              echo "$pdf_base64" | base64 -d > "$dir/sample.pdf"
            done

      - store_artifacts:
          path: /tmp/artifacts
          destination: additional-artifacts-folder

      - codecov/upload

      - setup_remote_docker

      - run:
          name: Generate Dockerfile
          command: |
            echo "FROM alpine" > Dockerfile
            echo "WORKDIR /app" >> Dockerfile
            echo "COPY coverage /app/coverage" >> Dockerfile
            echo "COPY dummy-artifact.zip /app/" >> Dockerfile
            echo "CMD [\"ls\", \"-lhR\", \"/app\"]" >> Dockerfile

      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKERHUB_USERNAME/circleci-artifact-demo:$CIRCLE_SHA1 .

      - run:
          name: Authenticate with Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - run:
          name: Push Docker image
          command: |
            docker push $DOCKERHUB_USERNAME/circleci-artifact-demo:$CIRCLE_SHA1

workflows:
  version: 2.1
  build-test:
    jobs:
      - build
