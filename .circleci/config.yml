version: 2.1
orbs:
  codecov: codecov/codecov@3

jobs:
  build:
    docker:
      - image: cimg/node:current
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            npm install --save-dev @babel/preset-env @babel/register
            npm install

      - run:
          name: Run tests and collect coverage
          command: |
            npx jest --coverage
            sleep 5
            echo "Listing all files in the coverage directory:"
            ls -R $CIRCLE_WORKING_DIRECTORY/coverage
            find $CIRCLE_WORKING_DIRECTORY/coverage -type f

      - store_artifacts:
          path: coverage/coverage-final.json
          destination: coverage-report-json

      - store_artifacts:
          path: coverage/lcov-report
          destination: coverage-report-html

      - run:
          name: Create  dummy zip file (2MB)
          command: |
            mkdir -p dummy-data
            dd if=/dev/urandom of=dummy-data/random.bin bs=1M count=2
            zip -r dummy-artifact.zip dummy-data

      - store_artifacts:
          path: dummy-artifact.zip
          destination: dummy-large-file

      - run:
          name: Generate /tmp/artifacts folder with sample files and a zip
          command: |
            mkdir -p /tmp/artifacts/files
            echo "Sample report content" > /tmp/artifacts/files/report1.txt
            echo "Another report content" > /tmp/artifacts/files/report2.txt
            echo "Creating a zip from those files"
            zip -j /tmp/artifacts/sample-reports.zip /tmp/artifacts/files/report1.txt /tmp/artifacts/files/report2.txt

      - store_artifacts:
          path: /tmp/artifacts
          destination: additional-artifacts-folder

      - codecov/upload

      - setup_remote_docker

      - run:
          name: Generate Dockerfile
          command: |
            echo "FROM alpine" > Dockerfile
            echo "WORKDIR /app" >> Dockerfile
            echo "COPY coverage /app/coverage" >> Dockerfile
            echo "COPY dummy-artifact.zip /app/" >> Dockerfile
            echo "CMD [\"ls\", \"-lhR\", \"/app\"]" >> Dockerfile

      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKERHUB_USERNAME/circleci-artifact-demo:$CIRCLE_SHA1 .

      - run:
          name: Authenticate with Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - run:
          name: Push Docker image
          command: |
            docker push $DOCKERHUB_USERNAME/circleci-artifact-demo:$CIRCLE_SHA1

workflows:
  version: 2.1
  build-test:
    jobs:
      - build
